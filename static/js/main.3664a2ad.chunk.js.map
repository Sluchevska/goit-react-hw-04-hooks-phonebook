{"version":3,"sources":["components/App/App.module.css","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["module","exports","LabelInput","styled","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","preventDefault","type","onChange","pattern","title","required","Span","span","ContainerItems","ul","ContactItems","li","ContactList","contacts","onRemove","map","id","onClick","Filter","onBlur","Container","div","TitleH1","h1","TitleH2","h2","uuidv4","require","v4","App","setContacts","filter","setFilter","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","doubleName","find","contact","toLowerCase","doublePhoneNumber","alert","newContact","prevContacts","currentTarget","normalizedFilter","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,wB,8HCAxJC,EAAaC,IAAOC,MAAV,yGAOVC,EAAQF,IAAOG,MAAV,gIAQLC,EAASJ,IAAOK,OAAV,kJ,OCbJ,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SACnC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAON,MACf,IAAK,OACHC,EAAQI,EAAEC,OAAOC,OACjB,MACF,IAAK,SACHJ,EAAUE,EAAEC,OAAOC,OACnB,MACF,QACE,SAeN,OACE,8BACE,uBAAMT,SARW,SAAAO,GACnBA,EAAEG,iBAEFV,EAASE,EAAME,GAPfD,EAAS,IACTE,EAAW,KAWT,UACE,cAACb,EAAD,mBACA,cAACG,EAAD,CACEgB,KAAK,OACLT,KAAK,OACLO,MAAOP,EACPU,SAAUN,EACVO,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAGV,cAACvB,EAAD,qBACA,cAACG,EAAD,CACEgB,KAAK,MACLT,KAAK,SACLO,MAAOL,EACPQ,SAAUN,EACVO,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAGV,cAAClB,EAAD,CAAQc,KAAK,SAAb,8BCvDD,IAAMK,EAAOvB,IAAOwB,KAAV,sFAMJpB,EAASJ,IAAOK,OAAV,kJASNoB,EAAiBzB,IAAO0B,GAAV,oEAKdC,EAAe3B,IAAO4B,GAAV,iJCKVC,I,MAAAA,EAjBf,YAA8C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC/B,OACE,cAACN,EAAD,UACGK,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,eAACgB,EAAD,CAAuBlB,KAAMA,EAAME,OAAQA,EAA3C,UACE,eAACY,EAAD,WAAOd,EAAP,QACA,eAACc,EAAD,WAAOZ,EAAP,OACA,eAAC,EAAD,CAAQO,KAAK,SAASgB,QAAS,kBAAMH,EAASE,IAA9C,UACG,IADH,sBAHiBA,SCFZE,EAPA,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAOG,EAAV,EAAUA,SAAUiB,EAApB,EAAoBA,OAApB,OACb,kCACE,cAACrC,EAAD,mCACA,cAACG,EAAD,CAAOgB,KAAK,OAAOF,MAAOA,EAAOG,SAAUA,EAAUiB,OAAQA,QCLpDC,EAAYrC,IAAOsC,IAAV,oPAaTC,EAAUvC,IAAOwC,GAAV,uDAOPC,EAAUzC,IAAO0C,GAAV,yECdRC,G,MAAWC,EAAQ,IAAvBC,IAEO,SAASC,IACtB,MAAgCtC,mBAAS,CACvC,CAAEyB,GAAI,OAAQxB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEsB,GAAI,OAAQxB,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEsB,GAAI,OAAQxB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEsB,GAAI,OAAQxB,KAAM,iBAAkBE,OAAQ,eAJhD,mBAAOmB,EAAP,KAAiBiB,EAAjB,KAMA,EAA4BvC,mBAAS,IAArC,mBAAOwC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAO,IAAD,EACRC,EAAe,UAAGC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAnC,QAAmD,GACxEJ,GAAmBJ,EAAYI,KAC9B,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAU3B,MAC/C,CAACA,IA2CJ,OACE,eAACO,EAAD,WACE,cAACE,EAAD,wBACA,cAACjC,EAAD,CAAaC,SA5CjB,SAAoBE,EAAME,GACxB,IAAM+C,EAAa5B,EAAS6B,MAC1B,SAAAC,GAAO,OAAIA,EAAQnD,KAAKoD,gBAAkBpD,EAAKoD,iBAE3CC,EAAoBhC,EAAS6B,MACjC,SAAAC,GAAO,OAAIA,EAAQjD,SAAWA,KAEhC+C,GAAcK,MAAM,GAAD,OAAItD,EAAJ,4BACnBqD,GAAqBC,MAAM,eAAD,OAAgBpD,EAAhB,4BAE1B,IAAMqD,EAAa,CACjB/B,GAAIU,IACJlC,OACAE,WAEDmD,IACEJ,GACDX,GAAY,SAAAkB,GAAY,OAAKD,GAAL,mBAAoBC,UA4B5C,cAACxB,EAAD,uBACA,cAAC,EAAD,CAAQzB,MAAOgC,EAAQ7B,SA1BN,SAAAL,GACnBmC,EAAUnC,EAAEoD,cAAclD,QAyBuBoB,OAdhC,SAAAtB,GACjBmC,EAAU,IACVnC,EAAEoD,cAAclD,MAAQ,MAatB,cAAC,EAAD,CAAac,SAvBU,WACzB,IAAMqC,EAAmBnB,EAAOa,cAEhC,OAAO/B,EAASkB,QAAO,qBAAGvC,KACnBoD,cAAcO,SAASD,MAmBLE,GAAsBtC,SAV3B,SAAAuC,GACpBvB,EAAYjB,EAASkB,QAAO,SAAAY,GAAO,OAAIA,EAAQ3B,KAAOqC,YC5D1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3B,EAAD,MAEF4B,SAASC,eAAe,W","file":"static/js/main.3664a2ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__25UyM\",\"App-logo\":\"App_App-logo__N80lG\",\"App-logo-spin\":\"App_App-logo-spin__1C3Xk\",\"App-header\":\"App_App-header__XtA9N\",\"App-link\":\"App_App-link__1-KmJ\"};","import styled from \"@emotion/styled\";\r\nexport const LabelInput = styled.label`\r\nfont-weight: 700;\r\nfont-style: italic;\r\nfont-size: 17px;\r\nmargin-right:5px;\r\n`\r\n\r\nexport const Input = styled.input`\r\nmargin-right: 5px;\r\npadding: 5px;\r\n\r\nborder-radius: 5px;\r\nbox-shadow: 1px 2px 3px rgb(85, 42, 85);\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 5px;\r\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\r\nfont-size: 14px;\r\nfont-weight:700;\r\n  \r\n`","import { useState } from 'react';\r\nimport { LabelInput, Input, Button } from './ContactForm.styled';\r\n\r\nexport default function ContactForm({onSubmit}) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName ('');\r\n    setNumber ('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <LabelInput>Name</LabelInput>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n\r\n        <LabelInput>Number</LabelInput>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\nexport const Span = styled.span`\r\nfont-weight: 500;\r\nfont-style: italic;\r\nfont-size: 17px;\r\n`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder-radius: 5px;\r\nbox-shadow: 3px 2px 3px rgb(85, 42, 85);\r\nfont-size: 14px;\r\nfont-weight:700;\r\n  \r\n`\r\n\r\nexport const ContainerItems = styled.ul`\r\nmargin-top: 40px;\r\npadding-right:40px;\r\n`\r\n\r\nexport const ContactItems = styled.li`\r\n\r\nlist-style:none;\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr 1fr;\r\nalign-items: center;\r\nmargin-bottom:5px;\r\n\r\n`\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Span,\r\n  Button,\r\n  ContactItems,\r\n  ContainerItems,\r\n} from './ContactList.styled';\r\n\r\nfunction ContactList({ contacts, onRemove }) {\r\n  return (\r\n    <ContainerItems>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItems key={id} name={name} number={number}>\r\n          <Span>{name}: </Span>\r\n          <Span>{number} </Span>\r\n          <Button type=\"button\" onClick={() => onRemove(id)}>\r\n            {' '}\r\n            Delete contact\r\n          </Button>\r\n        </ContactItems>\r\n      ))}\r\n    </ContainerItems>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Input, LabelInput } from '../ContactForm/ContactForm.styled';\r\n\r\n\r\nconst Filter = ({ value, onChange, onBlur }) => (\r\n  <label>\r\n    <LabelInput>Find contact by name</LabelInput>\r\n    <Input type=\"text\" value={value} onChange={onChange} onBlur={onBlur} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nmargin: 20px;\r\n\r\n background: linear-gradient(45deg, rgb(240, 160, 199), rgb(87, 66, 100));\r\npadding: 10px;\r\nwidth: 700px;\r\nbox-shadow: 5px 6px 9px rgb(85, 42, 85);\r\n border-radius: 5px;\r\n text-align: center;\r\n\r\n\r\n\r\n`\r\nexport const TitleH1 = styled.h1`\r\nfont-style: italic;\r\n\r\n\r\n\r\n`\r\n\r\nexport const TitleH2 = styled.h2`\r\nfont-style: italic;\r\nmargin-top:46px;\r\n\r\n\r\n\r\n`\r\n","import React, { useState, useEffect } from 'react';\n\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Container, TitleH1, TitleH2 } from './App.styled';\nimport './App.module.css';\n\nconst { v4: uuidv4 } = require('uuid');\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(localStorage.getItem('contacts')) ?? '';\n    currentContacts && setContacts(currentContacts);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function addContact(name, number) {\n    const doubleName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    const doublePhoneNumber = contacts.find(\n      contact => contact.number === number,\n    );\n    doubleName && alert(`${name} is already in contacts`);\n    doublePhoneNumber && alert(`This number ${number} is already in contacts`);\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    !doublePhoneNumber &&\n      !doubleName &&\n      setContacts(prevContacts => [newContact, ...prevContacts]);\n  }\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleBlur = e => {\n    setFilter('');\n    e.currentTarget.value = '';\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <TitleH1>Phonebook</TitleH1>\n      <ContactForm onSubmit={addContact} />\n      <TitleH2>Contacts</TitleH2>\n      <Filter value={filter} onChange={changeFilter} onBlur={handleBlur} />\n      <ContactList contacts={getVisibleContacts()} onRemove={deleteContact} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}